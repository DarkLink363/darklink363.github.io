{"version":3,"file":"Service-e30852ff.js","sources":["../../aiods-docs-src/src/stories/Crud/Service.mdx"],"sourcesContent":["import { Meta } from '@storybook/addon-docs';\n\n[//]: # (import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';)\n\n[//]: # (export const Component = &#40;&#41; => {)\n\n[//]: # (  return <SyntaxHighlighter/>;)\n\n[//]: # (};)\n\n<Meta title=\"Crud/Service\" />\n\n# Crud - Service\n\nService - główny element łączący np. kontroler z modelem,\nodpowiada za akcje wykonywane na modelu.\n\n#### [# Przykładowy Service użytkowników](#-przyk%C5%82adowy-service-u%C5%BCytkownik%C3%B3w)\n##### &emsp;[# Definiowanie modelu](#-definiowane-modelu)\n\n<br/><br/>\n\n## # Przykładowy najprostrzy Service użytkowników\n\nZawiera on wszystkie podstawowe funckje, takie jak:\n* **index** - zwraca wszystkie rekordy\n* **show** - zwraca jeden rekord\n* **store** - dodaje rekord do bazy danych\n* **update** - aktualizuje rekord w bazie danych\n* **destroy** - pobiera, a następnie usuwa rekord z bazy danych\n* **destroyDirect** - usuwa rekord z bazy danych\n\n```php\n<?php\n\nnamespace App\\Services;\n\nuse Aiods\\Support\\Crud\\Service;\nuse App\\Models\\User;\n\nclass UserService extends Service\n{\n    protected string $model = User::class;\n}\n```\n\n## # Definiowane modelu\n\nKażdy Service **wymaga** podania klasy modelu do którego ma się odwoływać\n\n```php\n  protected string $model = User::class;\n```\n\nJeżeli potrzebujemy pobierać model na podstawie jakiś zmiennych lub funkcji, trzeba nadpisać funkcję `getModel` i zwracać z niej klasę\n\n```php\n/**\n * @return string|Model\n */\npublic function getModel(): string|Model\n{\n    return User::class;\n}\n```\n\n## # Sortowanie\n<br/>\n\n### # Sortowanie domyślne\n\nsortowanie domyślne ustawiamy poprzez ustawienie zmiennej `$sortBy` w formie:\n* **pierwszy element tablicy:** kolumna po której wyniki mają być sortowane,\n* **drugi element tablicy:** kierunek sortowania `asc` lub `desc`\n\n```php\nprotected ?array $sortBy = [\n    'created_at',\n    'desc'\n];\n```\n\n### # Sortowanie z zapytania\n\n## # Wyszukiwanie\n<br/>\n\n### # Wyszukiwanie - definiowanie kolumn\n\nW celu umożliwienia wyszukiwania po danych kolumnach należy je zdefiniować, w tym celu do Service dodajemy zmienną `$searchIn`\n\n```php\nprotected array $searchIn = [\n    'first_name',\n    'last_name',\n    'email',\n    'phone',\n];\n```\n\n### # Wyszukiwanie po kolumnach łaczonych\n\nKolumny łączone to na przykład, jeżeli w bazie posiadamy osobne kolumny do imienia (`first_name`) oraz do nazwiska (`last_name`),\nnatomiast chcemy mieć możliwość szukania osobno jak i razem w obydwóch kolumnach,\nw tym celu musimy połączyć odpowiedzi z dwóch kolumn znakiem `+` i spacją pomiędzy (`' '`).\n\nMożemy tworzyć kilka kombinacji tych samych pól jak np. `\"first_name+' '+last_name\"` oraz `\"last_name+' '+first_name\"`\n\n```php\nprotected array $searchIn = [\n    'first_name',\n    'last_name',\n    \"first_name+' '+last_name\",\n    \"last_name+' '+first_name\"\n];\n```\n\nIstnieje również możliwość nadpisania funkcji `getSearchIn` w celu dodania zapytań *RAW*, np.\n\n*przykład używania CONCAT - to samo co `+`*\n\n```php\nprotected function getSearchIn(): array\n{\n    return [\n        'first_name',\n        'last_name',\n        'email',\n        'phone',\n        DB::raw(\"CONCAT(first_name,' ',last_name)\")\n    ];\n}\n```\n\n## # Relacje\n<br/>\n\n### # Relacje proste\n\nDodawanie relacji do poszczególnych zapytań odbywa się poprzed dodanie i uzupełnienie w zależności od potrzeb zmiennej `$relations` jak na przykładzie poniżej.\n\n```php\nprotected array $relations = [\n    'index' => ['role'],\n    'show' => ['role'],\n    'store' => [],\n    'update' => [],\n    'destroy' => [],\n];\n```\n\nOczywiście nie są wymagane wszystkie pozycje w tablicy, powyższy przykład można zapisać krócej:\n\n```php\nprotected array $relations = [\n    'index' => ['role'],\n    'show' => ['role'],\n];\n```\n\n\n\n### # Relacje złożone\n\n```php\n/**\n * @return array|array[]\n */\npublic function getRelations(): array\n{\n    return [\n        'index' => [\n            'tasks',\n        ],\n        'show' => [\n            'tasks' => fn ($q) => $q->orderBy('name')\n        ],\n    ];\n}\n```\n\n## # Rozszerzanie Service\n<br/>\n\n### # Tworzenie funkcji na podstawie CRUDowych\n\n```php\n/**\n * @throws Throwable\n */\npublic function userScoped($userId = null): \\Illuminate\\Database\\Eloquent\\Collection|array\n{\n    return parent::index(new Callback(fn ($q) => $q->of($userId ?? (auth()->check() ? auth()->user()->id : null) )));\n}\n```\n\nOdpowiednia klasa `Callback`\n\n```php\nuse Aiods\\Support\\Callback;\n```\n\n\n### # Tworzenie funkcji\n\n```php\npublic static function storeScoped(LeadStoreApiRequest $request)\n{\n    $defaultStatus = Status::query()->where('is_default', 1)->first();\n    return Task::query()->updateOrCreate([\n        'id' => $request->input('id'),\n        'user_id' => auth()->user()->id,\n        'status' => optional($defaultStatus)->status ?? 'Nowy',\n    ], $request->validated());\n}\n```\n\n## # Funkcje pomocnicze\n<br/>\n\n```php\nprotected function indexBuilder(Builder $builder): Builder { return $builder; }\n```\n```php\nprotected function showBuilder(Builder $builder): Builder { return $builder; }\n```\n```php\nprotected function storeBuilder(Builder $builder): Builder { return $builder; }\n```\n```php\nprotected function updateBuilder(Builder $builder): Builder { return $builder; }\n```\n```php\nprotected function destroyBuilder(Builder $builder): Builder { return $builder; }\n```\n\n```php\nprotected function getSelectOf($name)\n```\n\n```php\npublic function query(): Builder\n```\n\n```php\npublic function getRelationsOf($type): array\n```\n\n```php\npublic function setModel(string $model): void\n```\n\n```php\npublic function setSortBy(?array $sortBy): void\n```\n\n\n\n"],"names":["_createMdxContent","props","_components","_provideComponents","_jsxs","_Fragment","_jsx","Meta","MDXContent","MDXLayout"],"mappings":"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"}